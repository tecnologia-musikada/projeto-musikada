# terá todos os serviços necessários para o projecto funcionar: banco de dados, Kafka, ActiveMQ, nossas aplicações :porta,
version: "3.7"
services:
#  postgres_cadastro:
#    container_name: postgres_cadastro_ifood
#    image: postgres:12.2
#    environment:
#      POSTGRES_USER: cadastro
#      POSTGRES_PASSWORD: cadastro
#    ports:
#      - "5432:5432"
#  postgres_marketplace:
#    container_name: postgres_marketplace_ifood
#    image: postgres:12.2
#    environment:
#      POSTGRES_USER: marketplace
#      POSTGRES_PASSWORD: marketplace
#    ports:
#      - "5433:5432"
#
#  # Adicionando o serviço keycloak: responsável em gerenciar acesso de usuários ao sistema ifood (todos os modulos usarão este serviço)
#  keycloak_ifood:
#    container_name: keycloak_ifood
#    image: jboss/keycloak:13.0.1
#    environment:
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#      DB_VENDOR: h2
#    ports:
#      - "8180:8080"
#
#  # Adicionando o JAEGER: usado para delinear (mapear) uma requisição até ao banco de dados para ver aonde está demorando mais tempo, ver o tipo de resposta e o que foi passado
#  jaeger_ifood:
#    container_name: jaeger_ifood
#    image: jaegertracing/all-in-one:1.22
#    ports:
#      - "5775:5775/udp"
#      - "6831:6831/udp"
#      - "6832:6832/udp"
#      - "5778:5778"
#      - "16686:16686"
#      - "14268:14268"
#      - "14250:14250"
#      - "9411:9411"
#
#  # Adicionando o service Prometheus: responsável em buscar as metricas da nossa aplicação e salvando-os
#  prometheus_ifood:
#    container_name: prometheus_ifood
#    image: prometheus-ifood
#    network_mode: "host"
#
#  # Adicionando o serevice grafana: será usado para expor os dados do promotheus de modo a construir um dashboard
#  grafana_ifood:
#    container_name: grafana_ifood
#    image: grafana/grafana:6.5.0
#    network_mode: "host"
#
#  # Adicionando o service de mensageria ActiveMQ para publisher e Subscriber (envio e consumo de mensagem)
#  artemis_ifood:
#    container_name: artemis_ifood
#    image: vromero/activemq-artemis:2.11.0
#    ports:
#      - "5672:5672"
#      - "8161:8161"
#      - "61616:61616"
#      - "49154:49154"
#    environment:
#      ARTEMIS_USERNAME: admin
#      ARTEMIS_PASSWORD: admin

  # Adicionando o service MongoDB para armazenar os dados do microservice Pedido
  mongodb_musikada:
    container_name: mongodb_musikada
    image: mongo:4.2.5-bionic
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: musikada@
      MONGO_INITDB_ROOT_PASSWORD: musikada@
      MONGO_INITDB_DATABASE: musikada